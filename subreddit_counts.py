#!/usr/bin/env python3

from collections import defaultdict
from sys import stderr
import spotbot_topsongs

# Max number of subreddits to return per genre (or -1 for all)
NUM_SUBS_PER_GENRE = -1


# All subreddits found at: https://www.reddit.com/r/Music/wiki/musicsubreddits
ALL_SUBREDDITS = [
    ('Any genre', 'songwriterscircle'),
    ('Any genre', 'albumaday'),
    ('Any genre', 'albumlisteners'),
    ('Any genre', 'albumoftheday'),
    ('Any genre', 'Albums'),
    ('Any genre', 'audioinsurrection'),
    ('Any genre', 'bassheavy'),
    ('Any genre', 'BinauralMusic'),
    ('Any genre', 'BoyBands'),
    ('Any genre', 'Catchysongs'),
    ('Any genre', 'Chopping'),
    ('Any genre', 'CircleMusic'),
    ('Any genre', 'CoverSongs'),
    ('Any genre', 'cyberpunk_music'),
    ('Any genre', 'DANCEPARTY'),
    ('Any genre', 'danktunes'),
    ('Any genre', 'deepcuts'),
    ('Any genre', 'EarlyMusic'),
    ('Any genre', 'earlymusicalnotation'),
    ('Any genre', 'FemaleVocalists'),
    ('Any genre', 'festivals'),
    ('Any genre', 'findaband'),
    ('Any genre', 'FitTunes'),
    ('Any genre', 'FreeAlbums'),
    ('Any genre', 'freemusic'),
    ('Any genre', 'Frisson'),
    ('Any genre', 'gameofbands'),
    ('Any genre', 'GayMusic'),
    ('Any genre', 'germusic'),
    ('Any genre', 'gethightothis'),
    ('Any genre', 'GuiltyPleasureMusic'),
    ('Any genre', 'HeadNodders'),
    ('Any genre', 'heady'),
    ('Any genre', 'HeyThatWasIn'),
    ('Any genre', 'HighFidelity'),
    ('Any genre', 'ifyoulikeblank'),
    ('Any genre', 'ilikethissong'),
    ('Any genre', 'indie'),
    ('Any genre', 'Indieheads'),
    ('Any genre', 'IndieWok'),
    ('Any genre', 'Instrumentals'),
    ('Any genre', 'ipm'),
    ('Any genre', 'IsolatedVocals'),
    ('Any genre', 'LeeHallMusic'),
    ('Any genre', 'LetsTalkMusic'),
    ('Any genre', 'listentoconcerts'),
    ('Any genre', 'listentodynamic'),
    ('Any genre', 'listentomusic'),
    ('Any genre', 'ListenToThis'),
    ('Any genre', 'ListenToUs'),
    ('Any genre', 'livemusic'),
    ('Any genre', 'llawenyddhebddiwedd'),
    ('Any genre', 'LongerJams'),
    ('Any genre', 'Lyrics'),
    ('Any genre', 'mainstreammusic'),
    ('Any genre', 'makemeaplaylist'),
    ('Any genre', 'MiddleEasternMusic'),
    ('Any genre', 'MLPtunes'),
    ('Any genre', 'Music'),
    ('Any genre', 'MusicAlbums'),
    ('Any genre', 'musicanova'),
    ('Any genre', 'musicsuggestions'),
    ('Any genre', 'MusicToSleepTo'),
    ('Any genre', 'musicvideos'),
    ('Any genre', 'NameThatSong'),
    ('Any genre', 'NewAlbums'),
    ('Any genre', 'newmusic'),
    ('Any genre', 'onealbumaweek'),
    ('Any genre', 'partymusic'),
    ('Any genre', 'RedditOriginals'),
    ('Any genre', 'RepublicOfMusic'),
    ('Any genre', 'RoyaltyFreeMusic'),
    ('Any genre', 'runningmusic'),
    ('Any genre', 'ScottishMusic'),
    ('Any genre', 'SlavicMusicVideos'),
    ('Any genre', 'SpotifyMusic'),
    ('Any genre', 'ThemVoices'),
    ('Any genre', 'TodaysFavoriteSong'),
    ('Any genre', 'unheardof'),
    ('Any genre', 'WhatIListenTo'),
    ('Any genre', 'WTFMusicVideos'),
    ('By country/region/culture', 'AfricanMusic'),
    ('By country/region/culture', 'afrobeat'),
    ('By country/region/culture', 'balkanbrass'),
    ('By country/region/culture', 'balkanmusic'),
    ('By country/region/culture', 'brazilianmusic'),
    ('By country/region/culture', 'britpop'),
    ('By country/region/culture', 'CroatianMusic'),
    ('By country/region/culture', 'Flamenco'),
    ('By country/region/culture', 'Irishmusic'),
    ('By country/region/culture', 'ItalianMusic'),
    ('By country/region/culture', 'jpop'),
    ('By country/region/culture', 'KoreanRock'),
    ('By country/region/culture', 'kpop'),
    ('By country/region/culture', 'RoMusic'),
    ('By country/region/culture', 'somluso'),
    ('By country/region/culture', 'spop'),
    ('By country/region/culture', 'UKbands'),
    ('By country/region/culture', 'WorldMusic'),
    ('Classical music', 'baroque'),
    ('Classical music', 'ChamberMusic'),
    ('Classical music', 'choralmusic'),
    ('Classical music', 'classicalmusic'),
    ('Classical music', 'composer'),
    ('Classical music', 'concertband'),
    ('Classical music', 'contemporary'),
    ('Classical music', 'EarlyMusic'),
    ('Classical music', 'earlymusicalnotation'),
    ('Classical music', 'ElitistClassical'),
    ('Classical music', 'icm'),
    ('Classical music', 'Opera'),
    ('Classical music', 'orchestra'),
    ('Electronic music', 'acidhouse'),
    ('Electronic music', 'ambientmusic'),
    ('Electronic music', 'AStateOfTrance'),
    ('Electronic music', 'AtmosphericDnB'),
    ('Electronic music', 'BigBeat'),
    ('Electronic music', 'boogiemusic'),
    ('Electronic music', 'breakbeat'),
    ('Electronic music', 'breakcore'),
    ('Electronic music', 'brostep'),
    ('Electronic music', 'chicagohouse'),
    ('Electronic music', 'chillout'),
    ('Electronic music', 'Chipbreak'),
    ('Electronic music', 'Chiptunes'),
    ('Electronic music', 'complextro'),
    ('Electronic music', 'cxd'),
    ('Electronic music', 'darkstep'),
    ('Electronic music', 'deephouse'),
    ('Electronic music', 'DnB'),
    ('Electronic music', 'DubStep'),
    ('Electronic music', 'EBM'),
    ('Electronic music', 'EDM'),
    ('Electronic music', 'electrohiphop'),
    ('Electronic music', 'electrohouse'),
    ('Electronic music', 'ElectronicBlues'),
    ('Electronic music', 'electronicdancemusic'),
    ('Electronic music', 'ElectronicJazz'),
    ('Electronic music', 'electronicmagic'),
    ('Electronic music', 'ElectronicMusic'),
    ('Electronic music', 'electropop'),
    ('Electronic music', 'electroswing'),
    ('Electronic music', 'ExperimentalMusic'),
    ('Electronic music', 'fidget'),
    ('Electronic music', 'filth'),
    ('Electronic music', 'frenchelectro'),
    ('Electronic music', 'frenchhouse'),
    ('Electronic music', 'funkhouse'),
    ('Electronic music', 'fusiondancemusic'),
    ('Electronic music', 'futurebeats'),
    ('Electronic music', 'FutureFunkAirlines'),
    ('Electronic music', 'FutureGarage'),
    ('Electronic music', 'futuresynth'),
    ('Electronic music', 'gabber'),
    ('Electronic music', 'glitch'),
    ('Electronic music', 'glitchop'),
    ('Electronic music', 'Grime'),
    ('Electronic music', 'happyhardcore'),
    ('Electronic music', 'hardhouse'),
    ('Electronic music', 'hardstyle'),
    ('Electronic music', 'house'),
    ('Electronic music', 'idm'),
    ('Electronic music', 'industrialmusic'),
    ('Electronic music', 'ItaloDisco'),
    ('Electronic music', 'latinhouse'),
    ('Electronic music', 'LiquidDubstep'),
    ('Electronic music', 'mashups'),
    ('Electronic music', 'melodichouse'),
    ('Electronic music', 'minimal'),
    ('Electronic music', 'mixes'),
    ('Electronic music', 'moombahcore'),
    ('Electronic music', 'nightstep'),
    ('Electronic music', 'OldskoolRave'),
    ('Electronic music', 'Outrun'),
    ('Electronic music', 'partymusic'),
    ('Electronic music', 'plunderphonics'),
    ('Electronic music', 'psybient'),
    ('Electronic music', 'PsyBreaks'),
    ('Electronic music', 'psytrance'),
    ('Electronic music', 'purplemusic'),
    ('Electronic music', 'raggajungle'),
    ('Electronic music', 'RealDubstep'),
    ('Electronic music', 'skweee'),
    ('Electronic music', 'swinghouse'),
    ('Electronic music', 'tech_house'),
    ('Electronic music', 'Techno'),
    ('Electronic music', 'theOverload'),
    ('Electronic music', 'Trance'),
    ('Electronic music', 'tranceandbass'),
    ('Electronic music', 'trap'),
    ('Electronic music', 'tribalbeats'),
    ('Electronic music', 'TropicalHouse'),
    ('Electronic music', 'ukfunky'),
    ('Electronic music', 'witchhouse'),
    ('Electronic music', 'wuuB'),
    ('Hip-hop', '80sHipHop'),
    ('Hip-hop', '90sHipHop'),
    ('Hip-hop', 'altrap'),
    ('Hip-hop', 'asianrap'),
    ('Hip-hop', 'backpacker'),
    ('Hip-hop', 'backspin'),
    ('Hip-hop', 'BayRap'),
    ('Hip-hop', 'ChapHop'),
    ('Hip-hop', 'ChiefKeef'),
    ('Hip-hop', 'DrillandBop'),
    ('Hip-hop', 'Emo_Trap'),
    ('Hip-hop', 'Gfunk'),
    ('Hip-hop', 'hiphop101'),
    ('Hip-hop', 'hiphopheads'),
    ('Hip-hop', 'hiphopheadsnorthwest'),
    ('Hip-hop', 'LofiHipHop'),
    ('Hip-hop', 'MemphisRap'),
    ('Hip-hop', 'NYrap'),
    ('Hip-hop', 'Rap'),
    ('Hip-hop', 'raprock'),
    ('Hip-hop', 'rapverses'),
    ('Hip-hop', 'rhymesandbeats'),
    ('Hip-hop', 'trapmuzik'),
    ('Hip-hop', 'ukhiphopheads'),
    ('Hip-hop', 'undergroundchicago'),
    ('Other', '70s'),
    ('Other', 'Acappella'),
    ('Other', 'AcousticCovers'),
    ('Other', 'ambientfolk'),
    ('Other', 'animemusic'),
    ('Other', 'boomswing'),
    ('Other', 'bossanova'),
    ('Other', 'carmusic'),
    ('Other', 'chillmusic'),
    ('Other', 'Complextro'),
    ('Other', 'concerts'),
    ('Other', 'cpop'),
    ('Other', 'dembow'),
    ('Other', 'disco'),
    ('Other', 'DreamPop'),
    ('Other', 'dub'),
    ('Other', 'Elephant6'),
    ('Other', 'ETIMusic'),
    ('Other', 'Exotica'),
    ('Other', 'FunkSouMusic'),
    ('Other', 'gamemusic'),
    ('Other', 'GamesMusicMixMash'),
    ('Other', 'GunslingerMusic'),
    ('Other', 'GypsyJazz'),
    ('Other', 'IndieFolk'),
    ('Other', 'jambands'),
    ('Other', 'jazz'),
    ('Other', 'JazzFusion'),
    ('Other', 'JazzInfluence'),
    ('Other', 'klezmer'),
    ('Other', 'listentoconcerts'),
    ('Other', 'lt10k'),
    ('Other', 'MedievalMusic'),
    ('Other', 'MelancholyMusic'),
    ('Other', 'minimalism_music'),
    ('Other', 'motown'),
    ('Other', 'MusicForConcentration'),
    ('Other', 'muzyka'),
    ('Other', 'NuDisco'),
    ('Other', 'oldiemusic'),
    ('Other', 'OldiesMusic'),
    ('Other', 'pianocovers'),
    ('Other', 'popheads'),
    ('Other', 'PoptoRock'),
    ('Other', 'QuietStorm'),
    ('Other', 'rainymood'),
    ('Other', 'recordstorefinds'),
    ('Other', 'reggae'),
    ('Other', 'remixxd'),
    ('Other', 'RetroMusic'),
    ('Other', 'rnb'),
    ('Other', 'rootsmusic'),
    ('Other', 'SalsaMusic'),
    ('Other', 'Ska'),
    ('Other', 'Soca'),
    ('Other', 'songbooks'),
    ('Other', 'SoulDivas'),
    ('Other', 'Soulies'),
    ('Other', 'SoundsVintage'),
    ('Other', 'SpaceMusic'),
    ('Other', 'SurfPunk'),
    ('Other', 'swing'),
    ('Other', 'Tango'),
    ('Other', 'TheRealBookVideos'),
    ('Other', 'TouhouMusic'),
    ('Other', 'TraditionalMusic'),
    ('Other', 'treemusic'),
    ('Other', 'triphop'),
    ('Other', 'vaporwave'),
    ('Other', 'VintageObscura'),
    ('Other', 'vocaloid'),
    ('Rock/Metal', '80sHardcorePunk'),
    ('Rock/Metal', '90sAlternative'),
    ('Rock/Metal', '90sPunk'),
    ('Rock/Metal', '90sRock'),
    ('Rock/Metal', 'AltCountry'),
    ('Rock/Metal', 'AlternativeRock'),
    ('Rock/Metal', 'AORMelodic'),
    ('Rock/Metal', 'ausmetal'),
    ('Rock/Metal', 'BlackMetal'),
    ('Rock/Metal', 'bluegrass'),
    ('Rock/Metal', 'Blues'),
    ('Rock/Metal', 'bluesrock'),
    ('Rock/Metal', 'Boneyard'),
    ('Rock/Metal', 'CanadianClassicRock'),
    ('Rock/Metal', 'CanadianMusic'),
    ('Rock/Metal', 'Christcore'),
    ('Rock/Metal', 'ClassicRock'),
    ('Rock/Metal', 'country'),
    ('Rock/Metal', 'crunkcore'),
    ('Rock/Metal', 'deathcore'),
    ('Rock/Metal', 'deathmetal'),
    ('Rock/Metal', 'Djent'),
    ('Rock/Metal', 'DoomMetal'),
    ('Rock/Metal', 'Drone'),
    ('Rock/Metal', 'Emo'),
    ('Rock/Metal', 'EmoScreamo'),
    ('Rock/Metal', 'epicmetal'),
    ('Rock/Metal', 'flocked'),
    ('Rock/Metal', 'folk'),
    ('Rock/Metal', 'folkmetal'),
    ('Rock/Metal', 'folkpunk'),
    ('Rock/Metal', 'folkrock'),
    ('Rock/Metal', 'folkunknown'),
    ('Rock/Metal', 'GaragePunk'),
    ('Rock/Metal', 'GothicMetal'),
    ('Rock/Metal', 'Grunge'),
    ('Rock/Metal', 'hardcore'),
    ('Rock/Metal', 'HardRock'),
    ('Rock/Metal', 'horrorpunk'),
    ('Rock/Metal', 'indie_rock'),
    ('Rock/Metal', 'jrock'),
    ('Rock/Metal', 'krautrock'),
    ('Rock/Metal', 'LadiesofMetal'),
    ('Rock/Metal', 'MathRock'),
    ('Rock/Metal', 'melodicdeathmetal'),
    ('Rock/Metal', 'MelodicMetal'),
    ('Rock/Metal', 'metal'),
    ('Rock/Metal', 'metalcore'),
    ('Rock/Metal', 'Metalmusic'),
    ('Rock/Metal', 'MetalNews'),
    ('Rock/Metal', 'ModernRockMusic'),
    ('Rock/Metal', 'monsterfuzz'),
    ('Rock/Metal', 'neopsychedelia'),
    ('Rock/Metal', 'NewWave'),
    ('Rock/Metal', 'noiserock'),
    ('Rock/Metal', 'numetal'),
    ('Rock/Metal', 'OutlawCountry'),
    ('Rock/Metal', 'pianorock'),
    ('Rock/Metal', 'poppunkers'),
    ('Rock/Metal', 'PostHardcore'),
    ('Rock/Metal', 'PostRock'),
    ('Rock/Metal', 'powermetal'),
    ('Rock/Metal', 'powerpop'),
    ('Rock/Metal', 'ProgMetal'),
    ('Rock/Metal', 'progrockmusic'),
    ('Rock/Metal', 'PsychedelicRock'),
    ('Rock/Metal', 'punk'),
    ('Rock/Metal', 'Punk_Rock'),
    ('Rock/Metal', 'Punkskahardcore'),
    ('Rock/Metal', 'raprock'),
    ('Rock/Metal', 'Rock'),
    ('Rock/Metal', 'shoegaze'),
    ('Rock/Metal', 'stonerrock'),
    ('Rock/Metal', 'symphonicblackmetal'),
    ('Rock/Metal', 'symphonicmetal'),
    ('Rock/Metal', 'synthrock'),
    ('Rock/Metal', 'ThrowbackCore'),
    ('Rock/Metal', 'Truemetal'),
    ('Rock/Metal', 'truethrash'),
    ('Rock/Metal', 'WomenRock'),
    ('Some decades', '2000smusic'),
    ('Some decades', '2010smusic'),
    ('Some decades', '50sMusic'),
    ('Some decades', '60sMusic'),
    ('Some decades', '70sMusic'),
    ('Some decades', '80sMusic'),
    ('Some decades', '80sremixes'),
    ('Some decades', '90sMusic'),
]


def main():
    """
    Compute subreddit statistics, ranking each musical subreddit by genre and number of followers
    """
    reddit = spotbot_topsongs.init_reddit(client_id=spotbot_topsongs.REDDIT_CLIENT_ID,
                                          client_secret=spotbot_topsongs.REDDIT_CLIENT_SECRET,
                                          user_agent=spotbot_topsongs.REDDIT_USER_AGENT)

    # Get the subscriber count for each musical subreddit
    subreddit_subscribers = defaultdict(list)
    for (genre, subreddit) in ALL_SUBREDDITS:
        try:
            num_subscribers = reddit.subreddit(subreddit).subscribers
            subreddit_subscribers[genre].append((subreddit, num_subscribers))
            # print('{}: {} - {} subscribers'.format(genre, subreddit, num_subscribers))
        except Exception as e:
            print('Error: failed to check subscriber count for subreddit "{}"\n  {}'.format(subreddit, e), file=stderr)

    # For each genre, sort the subreddits by number of subscribers
    for genre in subreddit_subscribers:
        print('Top {}subreddits for genre "{}"'.format(
            '' if NUM_SUBS_PER_GENRE == -1 else '{} '.format(NUM_SUBS_PER_GENRE),
            genre
        ))

        sorted_subs = sorted(subreddit_subscribers[genre], key=lambda k: k[1], reverse=True)
        for i, sub_stats in enumerate(sorted_subs[:NUM_SUBS_PER_GENRE]):
            print('{}. /r/{} - {} subscribers'.format(i + 1, sub_stats[0], sub_stats[1]))
        print()


if __name__ == '__main__':
    main()
